services: 
  api1: 
    image: jairocatacora/api-mon-nod:0.0.6
    ports: 
      - "3000:3000"
    depends_on: 
      - mongodb
    networks: 
      - api-network
  
  mongodb: 
    image: mongo
    ports: 
      - "27017:27017"
    volumes: 
      #- ./data/db:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment: 
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
      - MONGO_INITDB_DATABASE=catalog
    networks: 
      - api-network

  api-psql-java:    
    image: jairocatacora/api-psql-java:0.0.9
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/database
    networks:
      - api-network
    depends_on:
      -  postgres

  py-mysql: 
    image: jairocatacora/py-mysql:0.0.3
    ports:
      - "5000:5000"
    depends_on:
      - mysql
    networks: 
      - api-network

  mysql: 
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: inventory
    volumes:
      - ./data.sql:/docker-entrypoint-initdb.d/data.sql:ro
    ports:
      - "3306:3306"
    networks: 
      - api-network

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres # 123
      POSTGRES_USER: postgres # user1
      POSTGRES_DB: database
    ports:
      - "5432:5432"
    networks:
      - api-network  

  orquestador:
    image: jairocatacora/api-orquestador:1.0.2
    ports:
      - "4000:4000" 
    networks:
      - api-network


networks: 
  api-network: 
    driver: bridge